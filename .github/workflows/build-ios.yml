name: iOS Build
on: [push]
jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          # Install base dependencies
          npm install

          # Install expo CLI and core packages
          npm install expo@latest
          npm install -g expo-cli

          # Install expo-router and related packages
          npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar
          
      - name: Verify expo-router setup
        run: |
          # Check if babel.config.js exists, create if not
          if [ ! -f babel.config.js ]; then
            echo "module.exports = function (api) {
              api.cache(true);
              return {
                presets: ['babel-preset-expo'],
                plugins: ['expo-router/babel'],
              };
            };" > babel.config.js
          fi

          # Check if app.json exists, create if not
          if [ ! -f app.json ]; then
            echo '{
              "expo": {
                "scheme": "your-app-scheme",
                "web": {
                  "bundler": "metro"
                },
                "plugins": [
                  "expo-router"
                ]
              }
            }' > app.json
          fi
          
      # Note: You need to set up EXPO_TOKEN in your repository secrets
      # Go to your GitHub repo -> Settings -> Secrets and Variables -> Actions -> New repository secret
      # Name: EXPO_TOKEN
      # Value: Your Expo token (get it from https://expo.dev/settings/access-tokens)
      - name: Install EAS CLI and polyfills
        run: |
          npm install -g eas-cli
          npm install -g node-libs-browser
        
      # Set CI environment variable and use it for Expo build
      - name: Setup Expo and build
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          CI: 1
        run: |
          # The EXPO_TOKEN environment variable will be automatically used for authentication
          # No need for explicit login as EAS CLI will use the token automatically

          # Configure EAS project if needed
          npx eas-cli configure --platform ios

          # Build with preview profile
          eas build --platform ios --profile preview --non-interactive
        
      - name: Get Build URL
        run: echo "Check the logs above for your build URL. Once the build completes, you can download the IPA from the Expo dashboard." 