name: Local iOS Build
on: [push]
jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          
      - name: Install dependencies
        run: |
          # Install base dependencies
          npm install

          # Install Expo CLI and related packages
          npm install expo@latest
          npm install -g expo-cli@latest
          npm install -g @expo/cli@latest
          npm install -g sharp-cli
          
          # Install expo-router and related packages
          npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar
          
          # Install cocoapods
          gem install cocoapods
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'
          
      - name: Setup EAS
        run: |
          # Create necessary configuration files
          echo '{
            "cli": {
              "version": ">= 3.13.3",
              "appVersionSource": "remote"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal"
              },
              "preview": {
                "distribution": "internal",
                "ios": {
                  "simulator": true
                }
              },
              "production": {}
            }
          }' > eas.json

          # Update app.json with required fields
          echo '{
            "expo": {
              "name": "iFree",
              "slug": "iFree",
              "version": "1.0.0",
              "orientation": "portrait",
              "icon": "./assets/icon.png",
              "userInterfaceStyle": "light",
              "scheme": "ifree",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#ffffff"
              },
              "assetBundlePatterns": [
                "**/*"
              ],
              "ios": {
                "supportsTablet": true,
                "bundleIdentifier": "com.freestyle.app"
              },
              "android": {
                "adaptiveIcon": {
                  "foregroundImage": "./assets/adaptive-icon.png",
                  "backgroundColor": "#ffffff"
                },
                "package": "com.freestyle.app"
              },
              "web": {
                "bundler": "metro",
                "favicon": "./assets/favicon.png"
              },
              "plugins": [
                "expo-router"
              ],
              "extra": {
                "eas": {
                  "projectId": "1f9aded8-37c1-4839-b80b-7a7ac1443977"
                }
              }
            }
          }' > app.json
          
      - name: Create Expo credentials
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          # Login to Expo
          echo "EXPO_TOKEN=$EXPO_TOKEN" > .env
          npx expo login --non-interactive
          
      - name: Generate native iOS code
        run: |
          # Generate iOS native code
          npx expo prebuild -p ios --clean
          
      - name: Install iOS dependencies
        run: |
          # Install iOS dependencies
          cd ios && pod install && cd ..
          
      - name: Build iOS app
        run: |
          # Build the iOS app
          cd ios
          xcodebuild -workspace iFree.xcworkspace -scheme iFree -configuration Release -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' EXCLUDED_ARCHS=arm64
          cd ..
          
      - name: Archive and upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ios-build
          path: |
            ios/build/Build/Products/Release-iphonesimulator
            
      - name: Build Summary
        run: |
          echo "### iOS Build Complete! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "The build has been completed and uploaded as an artifact." >> $GITHUB_STEP_SUMMARY
          echo "To download, go to the Actions tab, select this workflow run, and download the ios-build artifact." >> $GITHUB_STEP_SUMMARY 